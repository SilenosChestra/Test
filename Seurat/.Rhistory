barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)-12,
y=max(colSums(prop.counts))),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright"
x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts)))+3,
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts)))+1,
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts)))+0.5,
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts)))-1,
legend=c('F','M'))
colSums(prop.counts)
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))),
legend=c('F','M'))
max(colSums(prop.counts)))
max(colSums(prop.counts))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))+0.1),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))+0.2),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))+0.5),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=max(colSums(prop.counts))+1),
legend=c('F','M'))
#x=ncol(prop.counts)-13,
y=1,
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=2),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
#x=ncol(prop.counts)-13,
y=0),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)-13,
y=0),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)+13,
y=0),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)+25,
y=0),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)+30,
y=0),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)+30,
y=1),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)+30,
y=1.2),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)+30,
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)+31,
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)-31,
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)-20,
y=1.1),
legend=c('F','M'))
ncol(prop.counts)
barplot(prop.counts,
xlim=c(0, ncol(prop.counts) + 3),
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)-20,
y=1.1),
legend=c('F','M'))
ncol(prop.counts)
barplot(prop.counts,
xlim=c(0, ncol(prop.counts) - 3),
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts)-20,
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(0, ncol(prop.counts) + 3),
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(0, ncol(prop.counts) + 20),
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(ncol(prop.counts)),
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(0,ncol(prop.counts)),
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(0,ncol(prop.counts)*2),
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(0,ncol(prop.counts)*2)+3,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(0,ncol(prop.counts)*3)+3,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+3,
col=c('red','blue'),
beside=T,
args.legend = list(
#x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+3,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright"
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+3,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
x=ncol(prop.counts),
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+3,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+3,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "bottomright",
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "bottomright",
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-1, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
y=1.2),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x = "topright",
y=1.2),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts),
y=1.2),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3,
y=1.2),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3,
y=1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3,
y=1.1),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3,
y=1.05),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3+2,
y=1.05),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3+3,
y=1.05),
legend=c('F','M'))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3+4,
y=1.05),
legend=c('F','M'))
hippo.markers <- FindMarkers(brain.counts.umap, subset.ident = "Hippocampus", min.pct = 0.25)
Idents(brain.counts.umap)
Idents(brain.counts.umap) <- brain.counts.umap$subtissue
hippo.markers <- FindMarkers(brain.counts.umap, ident.1 = "Hippocampus" min.pct = 0.25)
hippo.markers <- FindMarkers(brain.counts.umap, ident.1 = "Hippocampus", min.pct = 0.25)
hippo.markers
hippo.markers <- FindMarkers(brain.counts.umap, ident.1 = "Hippocampus", ident.2 = "Cortex", min.pct = 0.25)
hippo_cortex.markers <- FindMarkers(brain.counts.umap, ident.1 = "Hippocampus", ident.2 = "Cortex", min.pct = 0.25)
hippo_cortex.markers
VlnPlot(hippo_cortex.markers, features = c("Ftl1", "Actb"))
head(hippo_cortex.markers, 5)
hippo_cortex.markers %>%
group_by(subtissue) %>%
top_n(n = 10, wt = avg_log2FC) -> top10
FindAllMarkers(brain.counts.umap, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
hippo_cortex.markers
head(hippo_cortex.markers, 5)
head(rownames(hippo_cortex.markers), 5)
top10 <- head(rownames(hippo_cortex.markers), 10)
DoHeatmap(brain.counts.umap, features = top10) + NoLegend()
top20 <- head(rownames(hippo_cortex.markers), 20)
DoHeatmap(brain.counts.umap, features = top20) + NoLegend()
top10 <- head(rownames(hippo_cortex.markers), 10)
DoHeatmap(brain.counts.umap, features = top10) + NoLegend()
hippo_cortex.markers <- FindMarkers(brain.counts.umap, ident.1 = "Hippocampus", ident.2 = "Cortex", min.pct = 0.25, only.pos = T)
top10 <- head(rownames(hippo_cortex.markers), 10)
DoHeatmap(brain.counts.umap, features = top10) + NoLegend()
?DoHeatmap
brain.counts.umap
brain.counts.umap$subtissue
DoHeatmap(brain.counts.umap[brain.counts.umap$subtissue %in% c("Hippocampus", "Cortex")], features = top10) + NoLegend()
DoHeatmap(brain.counts.umap[brain.counts.umap$subtissue %in% c("Hippocampus", "Cortex"), ], features = top10) + NoLegend()
brain.counts.umap[brain.counts.umap$subtissue %in% c("Hippocampus", "Cortex"), ]
brain.counts.umap[brain.counts.umap@meta.data$subtissue %in% c("Hippocampus", "Cortex"), ]
hippo_cortex.markers
sort(hippo_cortex.markers, "avg_log2FC")
sort(hippo_cortex.markers)
order(hippo_cortex.markers$avg_log2FC)
hippo_cortex.markers %>% arrange(avg_log2FC)
hippo_cortex.markers[order(hippo_cortex.markers$avg_log2FC, decreasing = TRUE, ]
hippo_cortex.markers[order(hippo_cortex.markers$avg_log2FC, decreasing = TRUE]
hippo_cortex.markers %>% slice_max(n = 2, order_by = avg_log2FC)
hippo_cortex.markers %>% slice_max(n = 10, order_by = avg_log2FC)
hippo_cortex.markers %>% slice_max(n = 10, order_by = avg_log2FC) -> top10
DoHeatmap(brain.counts.umap[brain.counts.umap@meta.data$subtissue %in% c("Hippocampus", "Cortex"), ], features = top10) + NoLegend()
DoHeatmap(brain.counts.umap, features = top10) + NoLegend()
hippo_cortex.markers %>% slice_max(n = 10, order_by = avg_log2FC)
hippo_cortex.markers %>% slice_max(n = 10, order_by = avg_log2FC) %>% rownames
hippo_cortex.markers %>% slice_max(n = 10, order_by = avg_log2FC) %>% rownames -> top10
hippo_cortex.markers %>% slice_max(n = 20, order_by = avg_log2FC) %>% rownames -> top20
DoHeatmap(brain.counts.umap, features = top20) + NoLegend()
hippo_cortex.markers <- FindMarkers(brain.counts.umap, ident.1 = "Hippocampus", ident.2 = "Cortex", min.pct = 0.25)
hippo_cortex.markers %>% slice_max(n = 20, order_by = avg_log2FC) %>% rownames -> top20
DoHeatmap(brain.counts.umap, features = top20) + NoLegend()
DoHeatmap(brain.counts.umap, features = top30) + NoLegend()
hippo_cortex.markers %>% slice_max(n = 30, order_by = avg_log2FC) %>% rownames -> top30
DoHeatmap(brain.counts.umap, features = top30) + NoLegend()
# look at RNA and Genes quantities distributions
VlnPlot(brain.counts, features = c("nFeature_RNA", "nCount_RNA"))
# look at RNA and Genes quantities distributions
VlnPlot(brain.counts.fileterd, features = c("nFeature_RNA", "nCount_RNA"))
# look at RNA and Genes quantities distributions
VlnPlot(brain.counts.filtered, features = c("nFeature_RNA", "nCount_RNA"))
# look at RNA and Genes quantities distributions
VlnPlot(brain.counts, features = c("nFeature_RNA", "nCount_RNA"))
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3+4,
y=1.05),
legend=c('F','M'))
plot1
plot1 + plot3
barplot(prop.counts,
xlim=c(-0.5, ncol(prop.counts)*3)+2,
col=c('red','blue'),
beside=T,
args.legend = list(
x=ncol(prop.counts)*3+4,
y=1.05),
legend=c('F','M'))
plot1 + plot3
prop.counts
counts
DimPlot(brain.counts.umap, reduction = "umap", group.by = "seurat_clusters", split.by = "mouse.sex")
